version: '3.8'

services:
  # ================================
  # MAIN APPLICATION
  # ================================
  
  backend:
    build: ./server
    container_name: caffis-backend
    ports:
      - "5000:5000"
      - "5555:5555" 
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://caffis_user:admin5026@db:5432/caffis_db
      - JWT_SECRET=${JWT_SECRET}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - caffis-network

  frontend:
    build: ./client
    container_name: caffis-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_MAP_SERVICE_URL=http://localhost:5001
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - caffis-network

  db:
    image: postgres:15
    container_name: caffis-db
    restart: always
    environment:
      POSTGRES_USER: caffis_user
      POSTGRES_PASSWORD: admin5026
      POSTGRES_DB: caffis_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - caffis-network

  # ================================
  # MAP MICROSERVICE
  # ================================

  map-backend:
    build: ./caffis-map-service/backend
    container_name: caffis-map-backend
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=development
      - PORT=5001
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://:caffis-dev-redis-2025@map-redis:6379
      - FRONTEND_URL=http://localhost:3000
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
      - MAIN_APP_API_URL=http://backend:5000
      - MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}
    volumes:
      - ./caffis-map-service/backend:/app
      - /app/node_modules
    depends_on:
      - map-redis
      - backend
    restart: unless-stopped
    networks:
      - caffis-network

  map-redis:
    image: redis:7-alpine
    container_name: caffis-map-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass caffis-dev-redis-2025
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - caffis-network

volumes:
  pgdata:
  redis_data:

networks:
  caffis-network:
    driver: bridge