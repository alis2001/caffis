version: '3.8'

services:
  # Database
  db:
    image: postgres:15-alpine
    container_name: caffis-db
    environment:
      POSTGRES_USER: caffis_user
      POSTGRES_PASSWORD: admin5026
      POSTGRES_DB: caffis_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U caffis_user -d caffis_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend - Development Mode
  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: caffis-backend
    ports:
      - "5000:5000"
      - "5555:5555"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://caffis_user:admin5026@db:5432/caffis_db
      - JWT_SECRET=caffis-super-secret-jwt-key-change-in-production-12345
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=alisadeghian7077@gmail.com
      - EMAIL_PASS=azwnegwuffgubzzg
      - EMAIL_FROM=Caffis <alisadeghian7077@gmail.com>
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - db
    command: npm run dev

  # Frontend - Development Mode  
  frontend:
    build: 
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: caffis-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev

volumes:
  pgdata:
