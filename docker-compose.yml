version: '3.8'

services:
  # ================================
  # MAIN APPLICATION
  # ================================
  
  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: caffis-backend
    ports:
      - "5000:5000"
      - "5555:5555" 
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://caffis_user:admin5026@db:5432/caffis_db
      - JWT_SECRET=${JWT_SECRET:-caffis-super-secret-jwt-key-change-in-production-12345}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/prisma/generated
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - caffis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: caffis-frontend
    ports:
      - "3000:3000"
    environment:
      # CRITICAL: Must use container name, not localhost
      - NEXT_PUBLIC_API_URL=http://caffis-backend:5000
      - NEXT_PUBLIC_MAP_SERVICE_URL=http://caffis-map-backend:5001
      - REACT_APP_API_URL=http://caffis-backend:5000
      - REACT_APP_MAP_SERVICE_URL=http://caffis-map-backend:5001
      - NODE_ENV=development
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - caffis-network

  db:
    image: postgres:15-alpine
    container_name: caffis-db
    restart: always
    environment:
      POSTGRES_USER: caffis_user
      POSTGRES_PASSWORD: admin5026
      POSTGRES_DB: caffis_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - caffis-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U caffis_user -d caffis_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ================================
  # MAP MICROSERVICE
  # ================================

  map-redis:
    image: redis:7-alpine
    container_name: caffis-map-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass caffis-dev-redis-2025 --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - caffis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  map-backend:
    build: 
      context: ./caffis-map-service/backend
      dockerfile: Dockerfile
    container_name: caffis-map-backend
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=development
      - PORT=5001
      - JWT_SECRET=${JWT_SECRET:-caffis-super-secret-jwt-key-change-in-production-12345}
      - REDIS_URL=redis://:caffis-dev-redis-2025@map-redis:6379
      - FRONTEND_URL=http://localhost:3000
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000,http://localhost:3002
      - MAIN_APP_API_URL=http://caffis-backend:5000
      - MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN:-pk.eyJ1IjoiYWxpczIwMDEiLCJhIjoiY21jcnNjODFoMHIybTJrcXNuYWw1NXZlYiJ9.dqmeeyoou2m-BngWFzG2Lw}
    volumes:
      - ./caffis-map-service/backend:/app
      - /app/node_modules
    depends_on:
      map-redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - caffis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  map-frontend:
    build:
      context: ./caffis-map-service/frontend
      dockerfile: Dockerfile
      target: development
    container_name: caffis-map-frontend
    ports:
      - "3002:3001"
    environment:
      - REACT_APP_MAP_API_URL=http://localhost:5001
      - REACT_APP_MAPBOX_TOKEN=${MAPBOX_ACCESS_TOKEN:-pk.eyJ1IjoiYWxpczIwMDEiLCJhIjoiY21jcnNjODFoMHIybTJrcXNuYWw1NXZlYiJ9.dqmeeyoou2m-BngWFzG2Lw}
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=false
      - NODE_ENV=development
    volumes:
      - ./caffis-map-service/frontend:/app
      - /app/node_modules
    depends_on:
      map-backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - caffis-network

volumes:
  pgdata:
    driver: local
  redis_data:
    driver: local

networks:
  caffis-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16