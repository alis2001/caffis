# caffis-map-service/nginx/nginx.conf
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ============================================
    # UPSTREAM DEFINITIONS
    # ============================================
    upstream map_backend {
        server map-backend:5001;
        keepalive 32;
    }

    upstream map_frontend_dev {
        server map-frontend:3001;
        keepalive 32;
    }

    # ============================================
    # MAP SERVICE SERVER
    # ============================================
    server {
        listen 80;
        server_name localhost;

        # ============================================
        # BACKEND API PROXY
        # ============================================
        location /api/ {
            proxy_pass http://map_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # ============================================
        # WEBSOCKET PROXY
        # ============================================
        location /socket.io/ {
            proxy_pass http://map_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # ============================================
        # FRONTEND DEVELOPMENT PROXY
        # ============================================
        location /map-widget-dev/ {
            proxy_pass http://map_frontend_dev/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;

            # For development hot reload
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ============================================
        # STATIC MAP WIDGET FILES (Production)
        # ============================================
        location /map-widget/ {
            alias /usr/share/nginx/html/map-widget/;
            try_files $uri $uri/ =404;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # CORS headers for widget embedding
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        # ============================================
        # HEALTH CHECK
        # ============================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ============================================
        # ROOT LOCATION
        # ============================================
        location / {
            return 200 "Caffis Map Service\n";
            add_header Content-Type text/plain;
        }

        # ============================================
        # ERROR PAGES
        # ============================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            return 404 "Map service endpoint not found\n";
            add_header Content-Type text/plain;
        }
        
        location = /50x.html {
            return 500 "Map service temporarily unavailable\n";
            add_header Content-Type text/plain;
        }
    }
}